{
    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "listOfAllowedSKUs" : {
            "type": "array",
            "defaultValue": ["Standard_LRS", "Standard_ZRS"]
        },
         "effect" : {
            "type": "string",
            "defaultValue": "Deny"
        },
        "allowedLocations": {
          "type": "array",
          "defaultvalue": ["East US"]
      }
    },
    "variables": {
       "policyParameters":{
        "listOfAllowedSKUs":{
          "value":"[parameters('allowedLocations')]"
          }
      }
    },

    "resources": [
      {
      "name": "Allowed-Locations",
      "type": "Microsoft.Authorization/policyDefinitions",
      "apiVersion": "2018-05-01",
      "location": "East US",
  "properties": {
    "displayName": "Allowed locations",
    "policyType": "Custom",
    "mode": "Indexed",
    "description": "This policy enables you to restrict the locations your organization can specify when deploying resources. Use to enforce your geo-compliance requirements. Excludes resource groups, Microsoft.AzureActiveDirectory/b2cDirectories, and resources that use the 'global' region.",
    "metadata": {
      "version": "1.0.0",
      "category": "General"
    },
    "parameters": {
      "allowedLocations": {
        "type": "array",
                "metadata": {
                    "description": "The list of locations that can be specified when deploying resources",
                    "strongType": "location",
                    "displayName": "Allowed locations"
                }
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "field": "location",
            "notIn": "[[parameters('allowedLocations')]"
          },
          {
            "field": "location",
            "notEquals": "global"
          },
          {
            "field": "type",
            "notEquals": "Microsoft.AzureActiveDirectory/b2cDirectories"
          }
        ]
      },
      "then": {
        "effect": "deny"
      }
    }
  }
},
      {
      "type": "Microsoft.Authorization/policySetDefinitions",
      "name": "My-Policy-Initiative",
      "apiVersion": "2018-05-01",
      "dependsOn": [
        "Allowed-Locations"
      ],
      "properties": {
        "displayName": "Allowed StorageSKUs",
        "description": "The list of SKUs that can be specified for storage accounts.",
        "metadata": {
          "category": "policyset"
        },
        "parameters": {
            "listOfAllowedSKUs": {
        "type": "Array",
        "metadata": {
          "description": "The list of SKUs that can be specified for storage accounts.",
          "displayName": "Allowed SKUs",
          "strongType": "StorageSKUs"
        }
      },
  "allowedLocations": {
        "type": "array",
                "metadata": {
                    "description": "The list of locations that can be specified when deploying resources",
                    "strongType": "location",
                    "displayName": "Allowed locations"
                }
  }
        },
        "policyDefinitions": [
          {
            "policyDefinitionId": "[resourceId('Microsoft.Authorization/policyDefinitions/', 'Allowed-Locations')]",
            "parameters": {
              "allowedLocations": {
                "value": "[[parameters('allowedLocations')]"
              }
            }
          }
        ]
      }
    },
      {
            "type": "Microsoft.Authorization/policyAssignments",
            "name": "policysetassignment",
            "apiVersion": "2018-05-01",
            "location": "East US",
                  "dependsOn": [
        "My-Policy-Initiative"
      ],
            "properties": {
                "scope": "[subscription().id]",
                "policyDefinitionId": "[resourceId('Microsoft.Authorization/policySetDefinitions/', 'My-Policy-Initiative')]",
                "parameters": "[variables('policyParameters')]"
            }
        }
    ],
    "outputs": {
  
    }
  }
