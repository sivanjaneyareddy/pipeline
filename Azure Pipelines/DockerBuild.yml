pool:
  vmImage: 'ubuntu-latest'
resources:
  repositories:
    - repository: other
      type: git
      name: Java Project/Vprofile

parameters:
  - name: Environments
    displayName: Select Environment
    default: QA
      - QA
      - STG
      - PROD  

stages:

- stage: build
  displayName: Build
  variables: 
  - group: ${{ parameters.Environments }}Vprofile
  
  jobs:
  - job: Build
    steps:
    - checkout: self
    - checkout: other   
    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          $Config_path = "$(System.DefaultWorkingDirectory)\Vprofile\src\main\resources\application.properties"
          $Contents = get-content $Config_path 
          $ChangedValues = $Contents -replace "dbservername", "$(mysql.connectionstring)"
          $ChangedValues = $ChangedValues -replace "dbusername", "$(mysql.password)"
          $ChangedValues = $ChangedValues -replace "dbpassword", "$(mysql.username)"
          $ChangedValues > $Config_path
    # - task: Maven@3
    #   inputs:
    #     mavenPomFile: '$(system.defaultworkingdirectory)\Vprofile\pom.xml'
    #     publishJUnitResults: true
    #     testResultsFiles: '**/surefire-reports/TEST-*.xml'
    #     javaHomeOption: 'JDKVersion'
    #     mavenVersionOption: 'Default'
    #     mavenAuthenticateFeed: false
    #     effectivePomSkip: false
    #     sonarQubeRunAnalysis: true
    #     sqMavenPluginVersionChoice: 'pom'
    
    - task: Maven@3
      inputs:
        mavenPomFile: '$(system.defaultworkingdirectory)/Vprofile/pom.xml
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false
        checkStyleRunAnalysis: true
        pmdRunAnalysis: true
        findBugsRunAnalysis: true

    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(system.defaultworkingdirectory)'
        Contents: |
            **\Vprofile\src\main\resources\application.properties
            **\Vprofile\target\vprofile-v2.war
        TargetFolder: '$(build.artifactstagingdirectory)'
    - task: Docker@2
      inputs:
        containerRegistry: 'Docker Hub'
        repository: 'pranay05/vproapp'
        command: 'build'
        Dockerfile: '**/Docker-Web/Dockerfile'
   
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(build.artifactstagingdirectory)'
        artifact: 'drop'
        publishLocation: 'pipeline'
    

